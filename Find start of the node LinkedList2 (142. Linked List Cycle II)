class Solution {
public:
    ListNode* detectCycle(ListNode* head) {
        ListNode* slow = head;
        ListNode* fast = head;

        // Step 1: Detect if a cycle exists
        while (fast != NULL && fast->next != NULL) {
            slow = slow->next;         // Move slow 1 step
            fast = fast->next->next;   // Move fast 2 steps

            if (slow == fast) {  // Cycle detected
                // Step 2: Find the cycle's starting node
                ListNode* entry = head;
                while (entry != slow) {
                    entry = entry->next;
                    slow = slow->next;
                }
                return entry; // Cycle start node
            }
        }

        return NULL; // No cycle found
    }
};
