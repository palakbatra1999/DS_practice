Best approach 
-----------------
class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int i,l=nums.size();
        if(l==1)
        return nums[0];
        int start=0,end=l-1,mid;
       // mid=(low+high)/2;
        while(start<=end)
        {
        mid=(start+end)/2;
        cout<<mid<<" ";
          int c=nums[mid];
          if((mid-1>=0)&&nums[mid-1]==c)
          {
              if(mid%2==0)
              {
                  end=mid;
                 
              }
              else   start=mid+1;
          }
          else if((mid+1<l)&&nums[mid+1]==c) 
          {
            if(mid%2==0)
            {
                start=mid+1;
                
            }
            else    end=mid;
          }
          else return nums[mid];
        }

        return -1;
       
    }
};
