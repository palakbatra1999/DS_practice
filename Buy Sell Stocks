class Solution {
public:
    int maxProfit(vector<int>& prices) {

        int l=prices.size(),i;
        int left[l],right[l];
        int min=INT_MAX,max=INT_MIN;

        for(i=0;i<l;i++)
        {
            if(prices[i]<min)
            {
                min=prices[i];
               
            }
 left[i]=min;
        }

         for(i=l-1;i>=0;i--)
        {
            if(prices[i]>max)
            {
                max=prices[i];
               
            }
             right[i]=max;

        }

        int sum=0;

        for(i=0;i<l;i++)
        {
            if(right[i]-left[i]>sum)
            sum=right[i]-left[i];
        }

        return sum;
        
    }
};
-------------------------Slightly better Approach-------------------------
class Solution {
public:
    int maxProfit(vector<int>& arr) {
        int i=0,j=1,n=arr.size(),maxn=0,profit=0;
      
      while(j<n)
      {
          if(arr[j]>arr[i])
             { 
              maxn=max(maxn,arr[j]-arr[i]);
             j++;
             }
          else{ i=j;
              j++;}
      }

        return maxn;

    }
};
